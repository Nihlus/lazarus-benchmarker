using System;
using System.Runtime.InteropServices;
using Lazarus.ADL;
using OpenTK;

namespace Lazarus.RW
{
    public class Lazarus : LazarusBindingsBase
    {
        private static byte[] EntryPointNames = {
            108, 122, 73, 110, 118, 101, 114, 116, 77, 97, 116, 114, 105, 120, 66, 121, 80, 116, 114, 0, 108, 122, 73,
            110, 118, 101, 114, 116, 77, 97, 116, 114, 105, 120, 66, 121, 86, 97, 108, 117, 101, 0,
        };
        private static int[] EntryPointNameOffsets = {0,20};
        private static IntPtr[] EntryPoints = new IntPtr[2];
        private const string Library = "lz.dll";
        [AutoGenerated(Version = "1.0", Category = "1.0", EntryPoint = "lzInvertMatrixByPtr")]
        public static void InvertMatrixByPtr(ref Matrix2 matrix)
        {
            throw new BindingsNotRewrittenException();
        }
        [AutoGenerated(Version = "1.0", Category = "1.0", EntryPoint = "lzInvertMatrixByValue")]
        public static Matrix2 InvertMatrixByValue(Matrix2 matrix)
        {
            throw new BindingsNotRewrittenException();
        }
        
        [Slot(0)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void lzInvertMatrixByPtr(ref Matrix2 matrix);
        [Slot(1)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern Matrix2 lzInvertMatrixByValue(Matrix2 matrix);
    }
}